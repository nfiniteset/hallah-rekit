type Dinner {
  id: ID!
  startsAt: String!
  invitations: [Invitation!]!
}

input InvitationInput {
  dinnerId: ID!
  guestId: ID!
}

input UpdateInvitationInput {
  id: ID!
  state: String
}

type Invitation {
  id: ID!
  dinnerId: ID!
  guestId: ID!
  state: String!
}

input GuestInput {
  name: String!
}

type Guest {
  id: ID!,
  name: String!,
  dietaryRestrictions: [String]!
}

type Query {
  guests: [Guest]!
  guest(id: ID!): Guest!
  dinners: [Dinner]!
}

type Mutation {
  createGuest(input: GuestInput!): Guest
  addDietaryRestriction(guestId: ID!, dietaryRestriction: String!): Guest!
  createNextDinner: Dinner!
  inviteGuest(input: InvitationInput!): Dinner!
  updateInvitation(input: UpdateInvitationInput!): Dinner!
}
